###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         21/Dec/2020  16:35:56 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\Source\IO\steer.c                             #
#    Command line       =  -f D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \Design\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev. #
#                          cfg (-DCPU32MHZ -DROOT=__near_func                 #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\Design\CC2530DB\..\..\..\Tool #
#                          s\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0   #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00020000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x19 -DNWK_START_DELAY=100   #
#                          -DEXTENDED_JOINING_RANDOM_MASK=0x007F              #
#                          -DBEACON_REQUEST_DELAY=100                         #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\Design\Source\IO\steer.c -D   #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D            #
#                          xPOWER_SAVING -lC D:\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\Design\CC2530DB\Kitchen\List\ -lA  #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\Kitchen\List\ --diag_suppress        #
#                          Pe001,Pa010 -o D:\ZStack-CC2530-2.5.1a\Projects\zs #
#                          tack\Samples\Design\CC2530DB\Kitchen\Obj\ -e       #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \Design\CC2530DB\ -I D:\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Samples\Design\CC2530DB\..\Source\ -I   #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\Source\IO\ -I                     #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\ZMain\TI2530DB\ -I          #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\..\..\Components\hal\includ #
#                          e\ -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samp #
#                          les\Design\CC2530DB\..\..\..\..\..\Components\hal\ #
#                          target\CC2530EB\ -I D:\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Samples\Design\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\include\ -I                          #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\..\..\Components\mac\high_l #
#                          evel\ -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\Design\CC2530DB\..\..\..\..\..\Components\m #
#                          ac\low_level\srf04\ -I D:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\Design\CC2530DB\..\..\..\..\. #
#                          .\Components\mac\low_level\srf04\single_chip\ -I   #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\..\..\Components\mt\ -I     #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\..\..\Components\osal\inclu #
#                          de\ -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\Sam #
#                          ples\Design\CC2530DB\..\..\..\..\..\Components\ser #
#                          vices\saddr\ -I D:\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Samples\Design\CC2530DB\..\..\..\..\..\Compo #
#                          nents\services\sdata\ -I                           #
#                          D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\..\..\..\..\..\Components\stack\af\  #
#                          -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \Design\CC2530DB\..\..\..\..\..\Components\stack\n #
#                          wk\ -I D:\ZStack-CC2530-2.5.1a\Projects\zstack\Sam #
#                          ples\Design\CC2530DB\..\..\..\..\..\Components\sta #
#                          ck\sapi\ -I D:\ZStack-CC2530-2.5.1a\Projects\zstac #
#                          k\Samples\Design\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\sec\ -I D:\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Samples\Design\CC2530DB\..\..\..\..\..\Compo #
#                          nents\stack\sys\ -I D:\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Samples\Design\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\zdo\ -I D:\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Samples\Design\CC2530DB\..\..\..\..\ #
#                          ..\Components\zmac\ -I D:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\Design\CC2530DB\..\..\..\..\. #
#                          .\Components\zmac\f8w\ -Ohz --require_prototypes   #
#    List file          =  D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\Kitchen\List\steer.lst               #
#    Object file        =  D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\De #
#                          sign\CC2530DB\Kitchen\Obj\steer.r51                #
#                                                                             #
#                                                                             #
###############################################################################

D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Design\Source\IO\steer.c
      1          #include <ioCC2530.h>

   \                                 In  segment SFR_AN, at 0x89
   \   unsigned char volatile __sfr P0IFG
   \                     P0IFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8c
   \   unsigned char volatile __sfr PICTL
   \                     PICTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8f
   \   unsigned char volatile __sfr P0INP
   \                     P0INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x9e
   \   unsigned char volatile __sfr CLKCONSTA
   \                     CLKCONSTA:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xab
   \   unsigned char volatile __sfr P0IEN
   \                     P0IEN:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb8
   \   union <unnamed> volatile __sfr _A_IEN1
   \                     _A_IEN1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc0
   \   union <unnamed> volatile __sfr _A_IRCON
   \                     _A_IRCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc6
   \   unsigned char volatile __sfr CLKCONCMD
   \                     CLKCONCMD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xda
   \   unsigned char volatile __sfr T1CC0L
   \                     T1CC0L:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xdb
   \   unsigned char volatile __sfr T1CC0H
   \                     T1CC0H:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xde
   \   unsigned char volatile __sfr T1CC2L
   \                     T1CC2L:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xdf
   \   unsigned char volatile __sfr T1CC2H
   \                     T1CC2H:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe4
   \   unsigned char volatile __sfr T1CTL
   \                     T1CTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe7
   \   unsigned char volatile __sfr T1CCTL2
   \                     T1CCTL2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf4
   \   unsigned char volatile __sfr P1SEL
   \                     P1SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf5
   \   unsigned char volatile __sfr P2SEL
   \                     P2SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
      2          #include "OnBoard.h"
      3          #define BEEP P1_2
      4          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      5          unsigned int STEER_STATE = 0;
   \                     STEER_STATE:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
      6          
      7          void STEER_INIT(void);
      8          void servo(int angle);
      9          void open(void);
     10          void close(void);
     11          void Delay_ms(unsigned int Time);
     12          void Delay_10us(void);
     13          void Delay_us(void);
     14          unsigned int STATE(void);
     15          void warming(void);
     16          void no_warm(void);
     17          __interrupt void S1_ISR(void);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     18          void STEER_INIT(void)
   \                     STEER_INIT:
     19          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     20              CLKCONCMD &= ~0x40; //设置系统时钟源为32MHZ晶振
   \   000000   53C6BF       ANL     0xc6,#0xbf
     21              while (CLKCONSTA & 0x40)
   \                     ??STEER_INIT_0:
   \   000003   E59E         MOV     A,0x9e
   \   000005   A2E6         MOV     C,0xE0 /* A   */.6
   \   000007   40FA         JC      ??STEER_INIT_0
     22                  ;               //等待晶振稳定为32M
     23              CLKCONCMD &= ~0x07; //设置系统主时钟频率为32MHZ
   \   000009   53C6F8       ANL     0xc6,#0xf8
     24              CLKCONCMD |= 0x38;  //时钟速度32 MHz 定时器标记输出设置[5:3]250kHz
   \   00000C   43C638       ORL     0xc6,#0x38
     25          
     26              PERCFG |= 0x40; //定时器1 的IO位置   1:备用位置2
   \   00000F   43F140       ORL     0xf1,#0x40
     27              P2SEL &= ~0x10; //定时器1优先
   \   000012   53F5EF       ANL     0xf5,#0xef
     28              P2DIR |= 0xC0;  //第1优先级：定时器1通道2-3
   \   000015   43FFC0       ORL     0xff,#0xc0
     29          
     30              P1DIR |= 0xff; //端口1为输出
   \   000018   75FEFF       MOV     0xfe,#-0x1
     31              BEEP = 0;
   \   00001B   C292         CLR     0x90.2
     32              P1SEL |= 0x01; //timer1 通道2映射口P1_0
   \   00001D   43F401       ORL     0xf4,#0x1
     33          
     34              T1CC2H = 0x01; //20%占空比为200us
   \   000020   75DF01       MOV     0xdf,#0x1
     35              T1CC2L = 0x77; //修改T1CC2L可调整led的亮度
   \   000023   75DE77       MOV     0xde,#0x77
     36          
     37              T1CC0H = 0x13; //20ms的周期时钟,频率为50ms定时器计数周期为0.000004
   \   000026   75DB13       MOV     0xdb,#0x13
     38              T1CC0L = 0x88; //定时时长=寄存器值*定时器计数周期
   \   000029   75DA88       MOV     0xda,#-0x78
     39          
     40              T1CCTL2 = 0x24; // 模式选择 通道2比较模式
   \   00002C   75E724       MOV     0xe7,#0x24
     41          
     42              T1CTL = 0x02;  //模模式250KHz 1分频
   \   00002F   75E402       MOV     0xe4,#0x2
     43              P0INP |= 0x02; //上拉
   \   000032   438F02       ORL     0x8f,#0x2
     44              P0IEN |= 0X02; //P01设置为中断方式
   \   000035   43AB02       ORL     0xab,#0x2
     45              PICTL |= 0X01; //下降沿触发
   \   000038   438C01       ORL     0x8c,#0x1
     46              EA = 1;
   \   00003B   D2AF         SETB    0xa8.7
     47              IEN1 |= 0X20;  // P0设置为中断方式;
   \   00003D   D2BD         SETB    0xb8.5
     48              P0IFG |= 0x00; //初始化中断标志位
   \   00003F   858989       MOV     0x89,0x89
     49          }
   \   000042   02....       LJMP    ?BRET
   \   000045                REQUIRE CLKCONCMD
   \   000045                REQUIRE CLKCONSTA
   \   000045                REQUIRE PERCFG
   \   000045                REQUIRE P2SEL
   \   000045                REQUIRE P2DIR
   \   000045                REQUIRE P1DIR
   \   000045                REQUIRE _A_P1
   \   000045                REQUIRE P1SEL
   \   000045                REQUIRE T1CC2H
   \   000045                REQUIRE T1CC2L
   \   000045                REQUIRE T1CC0H
   \   000045                REQUIRE T1CC0L
   \   000045                REQUIRE T1CCTL2
   \   000045                REQUIRE T1CTL
   \   000045                REQUIRE P0INP
   \   000045                REQUIRE P0IEN
   \   000045                REQUIRE PICTL
   \   000045                REQUIRE _A_IEN0
   \   000045                REQUIRE _A_IEN1
   \   000045                REQUIRE P0IFG
     50          #pragma vector = P0INT_VECTOR

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     51          __interrupt void S1_ISR(void)
   \                     S1_ISR:
     52          {
   \   000000   C0E0         PUSH    A
   \   000002   74F2         MOV     A,#-0xe
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 15
   \   000007                ; Auto size: 0
     53              Delay_ms(500);
   \   000007                ; Setup parameters for call to function Delay_ms
   \   000007   7AF4         MOV     R2,#-0xc
   \   000009   7B01         MOV     R3,#0x1
   \   00000B   12....       LCALL   ??Delay_ms?relay
     54              if (STEER_STATE == 1)
   \   00000E   90....       MOV     DPTR,#STEER_STATE
   \   000011   E0           MOVX    A,@DPTR
   \   000012   6401         XRL     A,#0x1
   \   000014   7002         JNZ     ??S1_ISR_0
   \   000016   A3           INC     DPTR
   \   000017   E0           MOVX    A,@DPTR
   \                     ??S1_ISR_0:
   \   000018   7005         JNZ     ??S1_ISR_1
     55              {
     56                  close();
   \   00001A                ; Setup parameters for call to function close
   \   00001A   12....       LCALL   ??close?relay
   \   00001D   8003         SJMP    ??S1_ISR_2
     57              }
     58              else
     59              {
     60                  open();
   \                     ??S1_ISR_1:
   \   00001F                ; Setup parameters for call to function open
   \   00001F   12....       LCALL   ??open?relay
     61              }
     62              P0IFG = 0;
   \                     ??S1_ISR_2:
   \   000022   758900       MOV     0x89,#0x0
     63              P0IF = 0;
   \   000025   C2C5         CLR     0xc0.5
     64          }
   \   000027   7F01         MOV     R7,#0x1
   \   000029   02....       LJMP    ?INTERRUPT_LEAVE_XSP
   \   00002C                REQUIRE P0IFG
   \   00002C                REQUIRE _A_IRCON
     65          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     66          void servo(int angle)
   \                     servo:
     67          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
     68              double time;                               //脉冲时间
     69              int cont;                                  //寄存器值
     70              time = angle * 11.1 + 510.0;               //脉冲时间与角度计算公式
     71              cont = (int)((time / 1000000) / 0.000004); //脉冲时间与寄存器值的计算公式
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   EB           MOV     A,R3
   \   000008   F5..         MOV     ?V0 + 1,A
   \   00000A   33           RLC     A
   \   00000B   95E0         SUBB    A,0xE0 /* A   */
   \   00000D   F5..         MOV     ?V0 + 2,A
   \   00000F   F5..         MOV     ?V0 + 3,A
   \   000011   78..         MOV     R0,#?V0 + 0
   \   000013   12....       LCALL   ?L_TO_FLT
   \   000016   90....       MOV     DPTR,#__Constant_4131999a
   \   000019   78..         MOV     R0,#?V0 + 4
   \   00001B   12....       LCALL   ?L_MOV_X
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   79..         MOV     R1,#?V0 + 4
   \   000022   12....       LCALL   ?FLT_MUL
   \   000025   90....       MOV     DPTR,#__Constant_43ff0000
   \   000028   78..         MOV     R0,#?V0 + 4
   \   00002A   12....       LCALL   ?L_MOV_X
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   79..         MOV     R1,#?V0 + 4
   \   000031   12....       LCALL   ?FLT_ADD
   \   000034   90....       MOV     DPTR,#__Constant_49742400
   \   000037   78..         MOV     R0,#?V0 + 4
   \   000039   12....       LCALL   ?L_MOV_X
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   79..         MOV     R1,#?V0 + 4
   \   000040   12....       LCALL   ?FLT_DIV
   \   000043   90....       MOV     DPTR,#__Constant_368637bd
   \   000046   78..         MOV     R0,#?V0 + 4
   \   000048   12....       LCALL   ?L_MOV_X
   \   00004B   78..         MOV     R0,#?V0 + 0
   \   00004D   79..         MOV     R1,#?V0 + 4
   \   00004F   12....       LCALL   ?FLT_DIV
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?FLT_TO_L
   \   000057   AA..         MOV     R2,?V0 + 0
     72          
     73              T1CC2H = (unsigned char)(cont >> 8); //寄存器赋值
   \   000059   7408         MOV     A,#0x8
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?SS_SHR
   \   000060   E5..         MOV     A,?V0 + 0
   \   000062   F5DF         MOV     0xdf,A
     74              T1CC2L = (unsigned char)cont;
   \   000064   EA           MOV     A,R2
   \   000065   F5DE         MOV     0xde,A
     75          }
   \   000067   7F08         MOV     R7,#0x8
   \   000069   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00006C                REQUIRE T1CC2H
   \   00006C                REQUIRE T1CC2L
     76          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          void open(void)
   \                     open:
     78          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     79              if (STEER_STATE == 0)
   \   000004   90....       MOV     DPTR,#STEER_STATE
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F8           MOV     R0,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F9           MOV     R1,A
   \   00000C   E8           MOV     A,R0
   \   00000D   49           ORL     A,R1
   \   00000E   700B         JNZ     ??open_0
     80              {
     81                  servo(1);
   \   000010                ; Setup parameters for call to function servo
   \   000010   7A01         MOV     R2,#0x1
   \   000012   12....       LCALL   ?Subroutine1 & 0xFFFF
     82                  Delay_ms(600);
     83                  servo(90);
     84                  STEER_STATE = 1;
     85              }
   \                     ??CrossCallReturnLabel_0:
   \   000015   7401         MOV     A,#0x1
   \   000017   F0           MOVX    @DPTR,A
   \   000018   A3           INC     DPTR
   \   000019   E4           CLR     A
   \   00001A   F0           MOVX    @DPTR,A
     86          }
   \                     ??open_0:
   \   00001B   80..         SJMP    ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine2_0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??servo?relay
   \   000005                ; Setup parameters for call to function Delay_ms
   \   000005                ; Setup parameters for call to function Delay_ms
   \   000005   7A58         MOV     R2,#0x58
   \   000007   7B02         MOV     R3,#0x2
   \   000009   12....       LCALL   ??Delay_ms?relay
   \   00000C                ; Setup parameters for call to function servo
   \   00000C                ; Setup parameters for call to function servo
   \   00000C   7A5A         MOV     R2,#0x5a
   \   00000E   7B00         MOV     R3,#0x0
   \   000010   12....       LCALL   ??servo?relay
   \   000013   90....       MOV     DPTR,#STEER_STATE
   \   000016   22           RET
     87          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     88          void close(void)
   \                     close:
     89          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     90              if (STEER_STATE == 1)
   \   000004   90....       MOV     DPTR,#STEER_STATE
   \   000007   E0           MOVX    A,@DPTR
   \   000008   6401         XRL     A,#0x1
   \   00000A   7002         JNZ     ??close_0
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \                     ??close_0:
   \   00000E   7009         JNZ     ??close_1
     91              {
     92                  servo(180);
   \   000010                ; Setup parameters for call to function servo
   \   000010   7AB4         MOV     R2,#-0x4c
   \   000012   12....       LCALL   ?Subroutine1 & 0xFFFF
     93                  Delay_ms(600);
     94                  servo(90);
     95                  STEER_STATE = 0;
     96              }
   \                     ??CrossCallReturnLabel_1:
   \   000015   E4           CLR     A
   \   000016   F0           MOVX    @DPTR,A
   \   000017   A3           INC     DPTR
   \   000018   F0           MOVX    @DPTR,A
     97          }
   \                     ??close_1:
   \   000019   80..         SJMP    ??Subroutine2_0
     98          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     99          void warming(void)
   \                     warming:
    100          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    101              BEEP = 1;
   \   000000   D292         SETB    0x90.2
    102          }
   \   000002   02....       LJMP    ?BRET
   \   000005                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    103          void no_warm(void)
   \                     no_warm:
    104          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    105              BEEP = 0;
   \   000000   C292         CLR     0x90.2
    106          }
   \   000002   02....       LJMP    ?BRET
   \   000005                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??Onboard_wait?relay
   \   000005                REQUIRE ??Subroutine2_0
   \   000005                ; // Fall through to label ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          void Delay_us(void) //1 us延时
   \                     Delay_us:
    108          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    109              MicroWait(1);
   \   000004                ; Setup parameters for call to function Onboard_wait
   \   000004   7A01         MOV     R2,#0x1
   \   000006   80..         SJMP    ?Subroutine0
    110          }
    111          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    112          void Delay_10us(void) //10 us延时
   \                     Delay_10us:
    113          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    114              MicroWait(12);
   \   000004                ; Setup parameters for call to function Onboard_wait
   \   000004   7A0C         MOV     R2,#0xc
   \   000006   80..         SJMP    ?Subroutine0
    115          }
    116          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    117          void Delay_ms(unsigned int Time) //n ms延时
   \                     Delay_ms:
    118          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    119              unsigned char i;
    120              while (Time--)
   \                     ??Delay_ms_0:
   \   000009   EE           MOV     A,R6
   \   00000A   F8           MOV     R0,A
   \   00000B   EF           MOV     A,R7
   \   00000C   F9           MOV     R1,A
   \   00000D   E8           MOV     A,R0
   \   00000E   24FF         ADD     A,#-0x1
   \   000010   1E           DEC     R6
   \   000011   E9           MOV     A,R1
   \   000012   34FF         ADDC    A,#-0x1
   \   000014   FF           MOV     R7,A
   \   000015   E8           MOV     A,R0
   \   000016   49           ORL     A,R1
   \   000017   6012         JZ      ??Delay_ms_1
    121              {
    122                  for (i = 0; i < 100; i++)
   \   000019   75..64       MOV     ?V0 + 0,#0x64
    123                      Delay_10us();
   \                     ??Delay_ms_2:
   \   00001C                ; Setup parameters for call to function Onboard_wait
   \   00001C   7A0C         MOV     R2,#0xc
   \   00001E   7B00         MOV     R3,#0x0
   \   000020   12....       LCALL   ??Onboard_wait?relay
   \   000023   15..         DEC     ?V0 + 0
   \   000025   E5..         MOV     A,?V0 + 0
   \   000027   60E0         JZ      ??Delay_ms_0
   \   000029   80F1         SJMP    ??Delay_ms_2
    124              }
    125          }
   \                     ??Delay_ms_1:
   \   00002B   7F01         MOV     R7,#0x1
   \   00002D   02....       LJMP    ?BANKED_LEAVE_XDATA
    126          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    127          unsigned int STATE(void)
   \                     STATE:
    128          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    129              return STEER_STATE;
   \   000004   90....       MOV     DPTR,#STEER_STATE
   \   000007   E0           MOVX    A,@DPTR
   \   000008   FA           MOV     R2,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   FB           MOV     R3,A
   \   00000C   02....       LJMP    ??Subroutine2_0 & 0xFFFF
    130          }

   \                                 In  segment INTVEC, offset 0x6b, root
   \                     `??S1_ISR??INTVEC 107`:
   \   00006B   02....       LJMP       (S1_ISR)

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_4131999a:
   \   000000   9A993141     DD 4131999AH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_43ff0000:
   \   000000   0000FF43     DD 43FF0000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_49742400:
   \   000000   00247449     DD 49742400H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_368637bd:
   \   000000   BD378636     DD 368637BDH

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??STEER_INIT?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    STEER_INIT

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??servo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    servo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??open?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    open

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??close?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    close

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??warming?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    warming

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??no_warm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    no_warm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_us?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_us

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_10us?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_10us

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_ms?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_ms

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??STATE?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    STATE

   Maximum stack usage in bytes:

     Function          ISTACK PSTACK XSTACK
     --------          ------ ------ ------
     Delay_10us            2      0      0
       -> Onboard_wait     4      0      0
     Delay_ms              0      0      9
       -> Onboard_wait     0      0     18
     Delay_us              2      0      0
       -> Onboard_wait     4      0      0
     S1_ISR               15      0      0
       -> Delay_ms        30      0      0
       -> close           30      0      0
       -> open            30      0      0
     STATE                 2      0      0
     STEER_INIT            0      0      0
     close                 2      0      0
       -> servo            4      0      0
       -> Delay_ms         4      0      0
       -> servo            4      0      0
     no_warm               0      0      0
     open                  2      0      0
       -> servo            4      0      0
       -> Delay_ms         4      0      0
       -> servo            4      0      0
     servo                 0      0     16
     warming               0      0      0


   Segment part sizes:

     Function/Label       Bytes
     --------------       -----
     P0IFG                   1
     PICTL                   1
     P0INP                   1
     _A_P1                   1
     CLKCONSTA               1
     _A_IEN0                 1
     P0IEN                   1
     _A_IEN1                 1
     _A_IRCON                1
     CLKCONCMD               1
     T1CC0L                  1
     T1CC0H                  1
     T1CC2L                  1
     T1CC2H                  1
     T1CTL                   1
     T1CCTL2                 1
     PERCFG                  1
     P1SEL                   1
     P2SEL                   1
     P1DIR                   1
     P2DIR                   1
     STEER_STATE             2
     STEER_INIT             69
     S1_ISR                 44
     servo                 108
     open                   29
     ??Subroutine2_0         7
     ?Subroutine1           23
     close                  27
     warming                 5
     no_warm                 5
     ?Subroutine0            5
     Delay_us                8
     Delay_10us              8
     Delay_ms               48
     STATE                  15
     ??S1_ISR??INTVEC 107    3
     __Constant_4131999a     4
     __Constant_43ff0000     4
     __Constant_49742400     4
     __Constant_368637bd     4
     ??STEER_INIT?relay      6
     ??servo?relay           6
     ??open?relay            6
     ??close?relay           6
     ??warming?relay         6
     ??no_warm?relay         6
     ??Delay_us?relay        6
     ??Delay_10us?relay      6
     ??Delay_ms?relay        6
     ??STATE?relay           6

 
 357 bytes in segment BANKED_CODE
  60 bytes in segment BANK_RELAYS
   3 bytes in segment INTVEC
  44 bytes in segment NEAR_CODE
  21 bytes in segment SFR_AN
  16 bytes in segment XDATA_ROM_C
   2 bytes in segment XDATA_Z
 
 461 bytes of CODE  memory (+  3 bytes shared)
   0 bytes of CONST memory (+ 16 bytes shared)
   0 bytes of DATA  memory (+ 21 bytes shared)
   2 bytes of XDATA memory

Errors: none
Warnings: none
